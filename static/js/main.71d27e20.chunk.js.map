{"version":3,"sources":["components/Card.js","components/Item.js","components/ListItem.js","actions/listAction.js","components/List.js","components/TodoForm.js","components/Modal.js","Todo.js","reducers/listReducer.js","index.js"],"names":["Card","props","className","children","Item","text","this","id","parseInt","Math","random","done","lastId","DoneImg","alt","src","ListItem","dispatch","useDispatch","item","onClick","type","payload","List","items","useSelector","state","map","TodoForm","useState","setText","onChange","event","t","target","value","ref","input","focus","preventDefault","addItem","onHideModal","Modal","e","show","SAVED_ITEMS","store","createStore","action","filter","actualState","localStorage","getItem","JSON","parse","loadState","subscribe","getState","setItem","stringify","Todo","showModal","setShowModal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71d27e20.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Card(props) {\r\n  return <div className={props.className ? `${props.className} card` : 'card'}>\r\n    {props.children}\r\n  </div>\r\n}\r\n\r\nexport default Card;\r\n","function random() {\r\n  let number = parseInt(Math.random() * 100000);\r\n  return number;\r\n}\r\n\r\nclass Item {\r\n  static lastId = 0;\r\n\r\n  constructor(text) {\r\n    this.id = random();\r\n    this.text = text;\r\n    this.done = false;\r\n  }\r\n\r\n}\r\n\r\nexport default Item\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Card from \"./Card\";\r\nimport { deleteItem, changeDone } from \"../actions/listAction\";\r\n\r\nfunction DoneImg(props) {\r\n  if (props.done) {\r\n    return (<img alt=\"done\" src=\"./assets/on.png\" />)\r\n  } else {\r\n    return (<img alt=\"undone\" src=\"./assets/off.png\" />)\r\n  }\r\n}\r\n\r\nfunction ListItem(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (<li>\r\n    <Card className={props.item.done ? 'done item' : 'item'}>\r\n      {props.item.text}\r\n      <div>\r\n        <button onClick={() => { dispatch(changeDone(props.item.id)) }}><DoneImg done={props.item.done} /></button>\r\n        <button onClick={() => { dispatch(deleteItem(props.item.id)) }}><img alt=\"delete\" src=\"./assets/lixo.png\" /></button>\r\n      </div>\r\n    </Card>\r\n  </li>)\r\n}\r\n\r\n\r\nexport default ListItem;\r\n","import Item from \"../components/Item\";\r\n\r\nexport function addItem(text) {\r\n  const item = new Item(text);\r\n  return { type: \"ADD_ITEM\", payload: item }\r\n}\r\n\r\nexport function deleteItem(id) {\r\n  return { type: \"DELETE_ITEM\", payload: id }\r\n}\r\n\r\nexport function changeDone(id) {\r\n  return { type: \"CHANGE_DONE\", payload: id }\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nfunction List(props) {\r\n  const items = useSelector(state => state)\r\n\r\n  return (<ul>\r\n    {items.map(item => <ListItem key={item.id} item={item}></ListItem>)}\r\n  </ul>)\r\n}\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItem } from \"../actions/listAction\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nfunction TodoForm(props) {\r\n  const [text, setText] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange(event) {\r\n    let t = event.target.value;\r\n    setText(t);\r\n  }\r\n\r\n  function addItemEvent(event) {\r\n    event.preventDefault();\r\n    if (text) {\r\n      dispatch(addItem(text))\r\n      setText('');\r\n      props.onHideModal();\r\n    }\r\n  }\r\n\r\n  return (<form>\r\n    <input onChange={handleChange} type=\"text\" ref={input => input && input.focus()} value={text}></input>\r\n    <button className=\"button\" onClick={addItemEvent}><FaPlus /></button>\r\n  </form>)\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Modal(props) {\r\n\r\n  function hideModal(e) {\r\n    let target = e.target;\r\n    if (target.id === 'modal') {\r\n      props.onHideModal();\r\n    }\r\n  }\r\n\r\n  return (<div id=\"modal\" onClick={hideModal} className={props.show ? 'modal' : 'modal hide'}>\r\n    <Card className=\"cardModal\">\r\n      {props.children}\r\n    </Card>\r\n  </div>)\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState } from \"react\";\r\nimport List from \"./components/List\";\r\nimport TodoForm from \"./components/TodoForm\";\r\nimport Modal from \"./components/Modal\";\r\nimport \"./Todo.css\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport listReducer from \"./reducers/listReducer\";\r\n\r\nconst SAVED_ITEMS = 'savedItems';\r\n\r\nfunction persistState(state) {\r\n  localStorage.setItem(SAVED_ITEMS, JSON.stringify(state));\r\n}\r\nfunction loadState() {\r\n  const actualState = localStorage.getItem(SAVED_ITEMS);\r\n  if (actualState) {\r\n    return JSON.parse(actualState);\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n\r\nconst store = createStore(listReducer, loadState());\r\n\r\nstore.subscribe(() => {\r\n  persistState(store.getState());\r\n})\r\n\r\nfunction Todo() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  function onHideModal() {\r\n    setShowModal(false);\r\n  }\r\n\r\n  return (<div className=\"container\">\r\n    <Provider store={store}>\r\n      <header className=\"header\"><h1>Lista de Tarefas</h1><button onClick={() => { setShowModal(true) }} className=\"addButton\">+</button></header>\r\n      <List></List>\r\n      <Modal show={showModal} onHideModal={onHideModal}><TodoForm onHideModal={onHideModal}></TodoForm></Modal>\r\n    </Provider>\r\n  </div>)\r\n}\r\n\r\nexport default Todo\r\n","export default function changeItem(state = [], action) {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n      return [...state, action.payload];\r\n    case \"DELETE_ITEM\":\r\n      return state.filter(item => item.id !== action.payload)\r\n    case \"CHANGE_DONE\":\r\n      return state.map(item => {\r\n        if (item.id === action.payload) {\r\n          item.done = !item.done\r\n        }\r\n        return item;\r\n      })\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Todo from './Todo';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Todo />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}